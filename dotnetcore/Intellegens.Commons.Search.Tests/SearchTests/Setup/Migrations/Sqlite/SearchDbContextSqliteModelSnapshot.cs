// <auto-generated />
using System;
using Intellegens.Commons.Search.Tests.SearchTests.Setup;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Intellegens.Commons.Search.Tests.SearchTests.Setup.Migrations.Sqlite
{
    [DbContext(typeof(SearchDbContextSqlite))]
    partial class SearchDbContextSqliteModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5");

            modelBuilder.Entity("Intellegens.Commons.Search.Tests.SearchTests.Setup.SearchTestChildEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ParentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TestingSessionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("SearchTestChildEntities");
                });

            modelBuilder.Entity("Intellegens.Commons.Search.Tests.SearchTests.Setup.SearchTestEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Decimal")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Guid")
                        .HasColumnType("TEXT");

                    b.Property<int>("Numeric")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SiblingId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TestingSessionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SiblingId")
                        .IsUnique();

                    b.ToTable("SearchTestEntities");
                });

            modelBuilder.Entity("Intellegens.Commons.Search.Tests.SearchTests.Setup.SearchTestChildEntity", b =>
                {
                    b.HasOne("Intellegens.Commons.Search.Tests.SearchTests.Setup.SearchTestEntity", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Intellegens.Commons.Search.Tests.SearchTests.Setup.SearchTestEntity", b =>
                {
                    b.HasOne("Intellegens.Commons.Search.Tests.SearchTests.Setup.SearchTestEntity", "Sibling")
                        .WithOne("SiblingBackReference")
                        .HasForeignKey("Intellegens.Commons.Search.Tests.SearchTests.Setup.SearchTestEntity", "SiblingId");
                });
#pragma warning restore 612, 618
        }
    }
}
